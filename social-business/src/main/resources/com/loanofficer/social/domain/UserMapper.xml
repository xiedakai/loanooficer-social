<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loanofficer.social.domain.UserMapper">
  <resultMap id="BaseResultMap" type="com.loanofficer.social.domain.User">
    <!--@mbg.generated-->
    <!--@Table social_user-->
    <id column="id" property="id" />
    <result column="user_name" property="userName" />
    <result column="age" property="age" />
    <result column="phone" property="phone" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_name, age, phone
  </sql>
  <select id="findByPhone" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List" />
        from social_user
        where phone=#{phone,jdbcType=VARCHAR}
    </select>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update social_user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.userName}
        </foreach>
      </trim>
      <trim prefix="age = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.age}
        </foreach>
      </trim>
      <trim prefix="phone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.phone}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update social_user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userName != null">
            when id = #{item.id} then #{item.userName}
          </if>
        </foreach>
      </trim>
      <trim prefix="age = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.age != null">
            when id = #{item.id} then #{item.age}
          </if>
        </foreach>
      </trim>
      <trim prefix="phone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.phone != null">
            when id = #{item.id} then #{item.phone}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into social_user
    (user_name, age, phone)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userName}, #{item.age}, #{item.phone})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.loanofficer.social.domain.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into social_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      user_name,
      age,
      phone,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      #{userName},
      #{age},
      #{phone},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      user_name = #{userName},
      age = #{age},
      phone = #{phone},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.loanofficer.social.domain.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into social_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="userName != null">
        #{userName},
      </if>
      <if test="age != null">
        #{age},
      </if>
      <if test="phone != null">
        #{phone},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="userName != null">
        user_name = #{userName},
      </if>
      <if test="age != null">
        age = #{age},
      </if>
      <if test="phone != null">
        phone = #{phone},
      </if>
    </trim>
  </insert>


</mapper>